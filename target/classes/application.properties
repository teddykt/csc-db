### security ########
security.oauth2.resource.filter-order=3
security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=TestRealm

security.jwt.client-id=TestClient
security.jwt.client-secret=f2a1ed52710d4533bde25be6da03b6e3
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=TestRestAPI

# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# DataSource settings
spring.datasource.url=jdbc:mysql://localhost:3306/csc-db
spring.datasource.username=ted
spring.datasource.password=12345

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



# # ===============================
# # = DATA SOURCE
# # ===============================

# # Set here configurations for the database connection

# # Connection url for the database "netgloo_blog"
# spring.datasource.url = jdbc:mysql://localhost:3306/csc-db

# # Username and secret
# spring.datasource.username = ted
# spring.datasource.password = 12345

# # Keep the connection alive if idle for a long time (needed in production)
# spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1

# # ===============================
# # = JPA / HIBERNATE
# # ===============================

# # Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# # stripped before adding them to the entity manager).

# # Show or not log for each sql query
# spring.jpa.show-sql = true

# # Hibernate ddl auto (create, create-drop, update): with "update" the database
# # schema will be automatically updated accordingly to java entities found in
# # the project
# spring.jpa.hibernate.ddl-auto = update

# # Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# spring.security.user.password = 123;

